---
import CourseEntry from "@components/CourseEntry.astro";
import HolidayHero from "@components/HolidayHero.astro";
import DiscountBundle from "@pages/black-friday/_components/DiscountBundle.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import NewsletterForm from "../pages/black-friday/_components/NewsletterForm.astro";
import BaseLayout from "./BaseLayout.astro";

type Course = {
  category: string;
  courses: {
    id: CollectionEntry<"courses">;
    prices: { old: number; new: number };
  }[];
};

const _courses = await getCollection("courses");

const courses: Course[] = [
  {
    category: "Project Based",
    courses: [
      {
        id: "zio-rite-of-passage",
        prices: { old: 495, new: 247.5 },
      },
      {
        id: "typelevel-rite-of-passage",
        prices: { old: 495, new: 247.5 },
      },
    ],
  },
  {
    category: "Bundles",
    courses: [
      {
        id: "the-scala-bundle",
        prices: { old: 195, new: 97.5 },
      },
      {
        id: "the-kotlin-bundle",
        prices: { old: 160, new: 80 },
      },
      {
        id: "the-apache-spark-bundle-with-scala",
        prices: { old: 180, new: 90 },
      },
      {
        id: "the-akka-apache-pekko-bundle-with-scala",
        prices: { old: 180, new: 90 },
      },
    ],
  },
  {
    category: "Scala",
    courses: [
      {
        id: "scala-essentials",
        prices: { old: 85, new: 42.5 },
      },
      {
        id: "scala-and-functional-programming-interview-practice",
        prices: { old: 95, new: 47.5 },
      },

      {
        id: "advanced-scala",
        prices: { old: 85, new: 42.5 },
      },
      {
        id: "scala-3-new-features",
        prices: { old: 35, new: 17.5 },
      },
      {
        id: "scala-essentials-old",
        prices: { old: 50, new: 25 },
      },
      {
        id: "advanced-scala-old",
        prices: { old: 50, new: 25 },
      },
    ],
  },
  {
    category: "Kotlin",
    courses: [
      {
        id: "kotlin-essentials",
        prices: { old: 95, new: 47.5 },
      },
      {
        id: "kotlin-coroutines-and-concurrency",
        prices: { old: 75, new: 37.5 },
      },
      {
        id: "advanced-kotlin",
        prices: { old: 75, new: 37.5 },
      },
    ],
  },
  {
    category: "ZIO",
    courses: [
      {
        id: "zio",
        prices: { old: 95, new: 47.5 },
      },
    ],
  },
  {
    category: "Typelevel",
    courses: [
      {
        id: "cats",
        prices: { old: 85, new: 42.5 },
      },
      {
        id: "cats-effect",
        prices: { old: 95, new: 47.5 },
      },
    ],
  },
  {
    category: "Apache Flink",
    courses: [
      {
        id: "apache-flink-with-scala",
        prices: { old: 85, new: 42.5 },
      },
    ],
  },
  {
    category: "Apache Spark",
    courses: [
      {
        id: "apache-spark-essentials-with-scala",
        prices: { old: 75, new: 37.5 },
      },
      {
        id: "apache-spark-streaming-with-scala",
        prices: { old: 75, new: 37.5 },
      },
      {
        id: "apache-spark-optimization-with-scala",
        prices: { old: 85, new: 42.5 },
      },
      {
        id: "apache-spark-performance-tuning-with-scala",
        prices: { old: 75, new: 37.5 },
      },
    ],
  },
  {
    category: "Akka/Apache Pekko",
    courses: [
      {
        id: "akka-apache-pekko-essentials-with-scala",
        prices: { old: 85, new: 42.5 },
      },
      {
        id: "akka-apache-pekko-streams-with-scala",
        prices: { old: 95, new: 47.5 },
      },
      {
        id: "akka-apache-pekko-http-with-scala",
        prices: { old: 50, new: 25 },
      },
    ],
  },
  {
    category: "Still Free",
    courses: [
      {
        id: "scala-at-light-speed",
        prices: { old: 0, new: 0 },
      },
      {
        id: "kotlin-at-light-speed",
        prices: { old: 0, new: 0 },
      },
    ],
  },
].map(({ category, courses }) => ({
  category: category,
  courses: courses.map((course) => ({
    id: _courses.find((_course) => _course.slug === course.id)!,
    prices: course.prices,
  })),
}));

interface Props {
  title: string;
  subtitle1: string;
  subtitle2: string;
  annotation: string;
  imageName: string;
}

const { title, subtitle1, subtitle2, annotation, imageName } = Astro.props;
---

<BaseLayout
  forcedTheme="black-friday"
  description="All of the Rock the JVM premium content, at your service."
  title="The Rock the JVM Membership"
>
  <HolidayHero {title} {subtitle1} {subtitle2} {annotation} {imageName} />
  <DiscountBundle />
  <article>
    {
      courses.slice(0, 2).map(({ category, courses }) => (
        <section class="px-8 pt-4 sm:pt-8 md:pt-12 lg:px-16">
          <div class="flex flex-row gap-x-4">
            {/* <div class="ml-8 flex size-16 justify-center rounded-full bg-white p-4 align-middle ring-1 ring-content-2 md:size-20 lg:size-28 lg:p-5">
              <Image
                src={category.id.data.logo}
                alt={category.id.data.name}
                class="my-auto w-full"
              />
            </div> */}
            <h2 class="my-auto w-full text-center">{category}</h2>
          </div>
          {courses.map(({ id, prices }) => (
            <CourseEntry course={id} holiday={true} {prices} />
          ))}
        </section>
      ))
    }
    <NewsletterForm />
    {
      courses.slice(2).map(({ category, courses }) => (
        <section class="px-8 pt-4 sm:pt-8 md:pt-12 lg:px-16">
          <div class="flex flex-row gap-x-4">
            {/* <div class="ml-8 flex size-16 justify-center rounded-full bg-white p-4 align-middle ring-1 ring-content-2 md:size-20 lg:size-28 lg:p-5">
              <Image
                src={category.id.data.logo}
                alt={category.id.data.name}
                class="my-auto w-full"
              />
            </div> */}
            <h2 class="my-auto w-full text-center">{category}</h2>
          </div>
          {courses.map(({ id, prices }) => (
            <CourseEntry course={id} holiday={true} {prices} />
          ))}
        </section>
      ))
    }
  </article>
</BaseLayout>
